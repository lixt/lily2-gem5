// -*- mode:c++ -*-

// Copyright (c) 2014 DSP Group, Institute of Microelectronics, Tsinghua University.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met: redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer;
// redistributions in binary form must reproduce the above copyright
// notice, this list of conditions and the following disclaimer in the
// documentation and/or other materials provided with the distribution;
// neither the name of the copyright holders nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

def operand_types {{
    # Scalar Operands.
    'sw'  : 'OpWord_t',
    'uw'  : 'OpWord_t',
#    'sf'  : 'OpSF_t',
#    'df'  : 'OpDF_t',
#
#    # Vector Operands.
#    'sb4' : 'OpB4_t',
#    'ub4' : 'OpB4_t',
#    'sh2' : 'OpH2_t',
#    'uh2' : 'OpH2_t',
#    'sh4' : 'OpH4_t',
#    'uh4' : 'OpH4_t',
#    'sw2' : 'OpW2_t',
#    'uw2' : 'OpW2_t',
#    'sf2' : 'OpSF2_t',
}};

def operands {{

    # Word operands.
    'Wd': ('OpWord', 'uw', 'RD', '', 1),
    'Wa': ('OpWord', 'uw', 'RA', '', 2),
    'Wb': ('OpWord', 'uw', 'RB', '', 3),

#    # Single-Precision operands.
#    'SFd': ('OpSF', 'sf', 'RD', '', 1),
#    'SFa': ('OpSF', 'sf', 'RA', '', 2),
#    'SFb': ('OpSF', 'sf', 'RB', '', 3),
#
#    # Double-Precision operands.
#    'DFd': ('OpDF', 'df', 'DD', '', 1),
#    'DFa': ('OpDF', 'df', 'DA', '', 2),
#    'DFb': ('OpDF', 'df', 'DB', '', 3),
#
#    # 4-Way byte operands.
#    'B4d': ('OpB4', 'ub4', 'RD', '', 1),
#    'B4a': ('OpB4', 'ub4', 'RA', '', 2),
#    'B4b': ('OpB4', 'ub4', 'RB', '', 3),
#
#    # 2-Way halfword operands.
#    'H2d': ('OpH2', 'uh2', 'RD', '', 1),
#    'H2a': ('OpH2', 'uh2', 'RA', '', 2),
#    'H2b': ('OpH2', 'uh2', 'RB', '', 3),
#
#    # 4-Way halfword operands.
#    'H4d': ('OpH4', 'uh4', 'DD', '', 1),
#    'H4a': ('OpH4', 'uh4', 'DA', '', 2),
#    'H4b': ('OpH4', 'uh4', 'DB', '', 3),
#
#    # 2-Way word operands.
#    'W2d': ('OpW2', 'uw2', 'DD', '', 1),
#    'W2a': ('OpW2', 'uw2', 'DA', '', 2),
#    'W2b': ('OpW2', 'uw2', 'DB', '', 3),
#
#    # 2-Way Single-Precision operands.
#    'SF2d': ('OpSF2', 'sf2', 'DD', '', 1),
#    'SF2a': ('OpSF2', 'sf2', 'DA', '', 2),
#    'SF2b': ('OpSF2', 'sf2', 'DB', '', 3),

}};
